//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Game = newGameTable("", "game", "")

type gameTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnInteger
	CreatedAt sqlite.ColumnTimestamp
	Stake     sqlite.ColumnFloat
	Online    sqlite.ColumnBool

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GameTable struct {
	gameTable

	EXCLUDED gameTable
}

// AS creates new GameTable with assigned alias
func (a GameTable) AS(alias string) *GameTable {
	return newGameTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GameTable with assigned schema name
func (a GameTable) FromSchema(schemaName string) *GameTable {
	return newGameTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GameTable with assigned table prefix
func (a GameTable) WithPrefix(prefix string) *GameTable {
	return newGameTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GameTable with assigned table suffix
func (a GameTable) WithSuffix(suffix string) *GameTable {
	return newGameTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGameTable(schemaName, tableName, alias string) *GameTable {
	return &GameTable{
		gameTable: newGameTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newGameTableImpl("", "excluded", ""),
	}
}

func newGameTableImpl(schemaName, tableName, alias string) gameTable {
	var (
		IDColumn        = sqlite.IntegerColumn("id")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		StakeColumn     = sqlite.FloatColumn("stake")
		OnlineColumn    = sqlite.BoolColumn("online")
		allColumns      = sqlite.ColumnList{IDColumn, CreatedAtColumn, StakeColumn, OnlineColumn}
		mutableColumns  = sqlite.ColumnList{CreatedAtColumn, StakeColumn, OnlineColumn}
	)

	return gameTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		Stake:     StakeColumn,
		Online:    OnlineColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
