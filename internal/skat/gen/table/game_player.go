//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var GamePlayer = newGamePlayerTable("", "game_player", "")

type gamePlayerTable struct {
	sqlite.Table

	// Columns
	GameID   sqlite.ColumnInteger
	PlayerID sqlite.ColumnInteger
	Rank     sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type GamePlayerTable struct {
	gamePlayerTable

	EXCLUDED gamePlayerTable
}

// AS creates new GamePlayerTable with assigned alias
func (a GamePlayerTable) AS(alias string) *GamePlayerTable {
	return newGamePlayerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GamePlayerTable with assigned schema name
func (a GamePlayerTable) FromSchema(schemaName string) *GamePlayerTable {
	return newGamePlayerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GamePlayerTable with assigned table prefix
func (a GamePlayerTable) WithPrefix(prefix string) *GamePlayerTable {
	return newGamePlayerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GamePlayerTable with assigned table suffix
func (a GamePlayerTable) WithSuffix(suffix string) *GamePlayerTable {
	return newGamePlayerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGamePlayerTable(schemaName, tableName, alias string) *GamePlayerTable {
	return &GamePlayerTable{
		gamePlayerTable: newGamePlayerTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newGamePlayerTableImpl("", "excluded", ""),
	}
}

func newGamePlayerTableImpl(schemaName, tableName, alias string) gamePlayerTable {
	var (
		GameIDColumn   = sqlite.IntegerColumn("game_id")
		PlayerIDColumn = sqlite.IntegerColumn("player_id")
		RankColumn     = sqlite.IntegerColumn("rank")
		allColumns     = sqlite.ColumnList{GameIDColumn, PlayerIDColumn, RankColumn}
		mutableColumns = sqlite.ColumnList{GameIDColumn, PlayerIDColumn, RankColumn}
	)

	return gamePlayerTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		GameID:   GameIDColumn,
		PlayerID: PlayerIDColumn,
		Rank:     RankColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
