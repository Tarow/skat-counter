// Code generated by templ - DO NOT EDIT.

// templ: version: 0.2.476
package component

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func PlayerInput() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"grid grid-cols-6 gap-3 items-center\"><div class=\"col-span-3\" id=\"player_names\"><input type=\"text\" placeholder=\"Enter Player Name\" class=\"input input-bordered\" id=\"player_input\" onkeydown=\"handleKeyDown(event)\"></div><div class=\"col-span-3\"><p class=\"flex justify-center\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var2 := `Players (Drag to sort)`
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var2)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></div><div class=\"col-span-3 col-start-4\"><div id=\"player_names\"><div class=\"flex flex-col gap-2 sortable\" id=\"player_list\"></div></div></div></div><script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var3 := `
    function handleKeyDown(event) {
        if (event.key === 'Enter') {
          event.preventDefault();
          const playerInput = document.getElementById('player_input');
          const playerName = playerInput.value.trim();

          if (playerName !== '') {
              addPlayer(playerName);
              playerInput.value = '';
          }
        }
    }

    function addPlayer(text) {
      const wrapper = document.getElementById('player_list');

      const divElement = document.createElement('div');
      divElement.className = 'flex items-end';

      // Create input element
      const inputElement = document.createElement('input');
      inputElement.type = 'text';
      inputElement.name = 'player';
      inputElement.value = text;
      inputElement.setAttribute('hidden', 'true');

      // Create span element
      const spanElement = document.createElement('div');
      spanElement.className = 'pr-2 leading-relaxed'
      spanElement.style.cursor = 'grab';
      spanElement.appendChild(document.createTextNode(text));

      // Create an SVG element
      const svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
      svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
      svgElement.setAttribute('class', 'h-6 w-6');
      svgElement.setAttribute('fill', 'none');
      svgElement.setAttribute('viewBox', '0 0 24 24');
      svgElement.setAttribute('stroke', 'currentColor');

      // Create path element inside svg
      const pathElement = document.createElementNS('http://www.w3.org/2000/svg',"path");  
      pathElement.setAttribute('stroke-linecap', 'round');
      pathElement.setAttribute('stroke-linejoin', 'round');
      pathElement.setAttribute('stroke-width', '2');
      pathElement.setAttribute('d', 'M6 18L18 6M6 6l12 12');

      // Append path to svg
      svgElement.appendChild(pathElement);

      // Append input, span, and svg elements to the div
      divElement.appendChild(inputElement);
      divElement.appendChild(spanElement);
      divElement.appendChild(svgElement);

      svgElement.addEventListener('click', () => wrapper.removeChild(divElement));
      wrapper.appendChild(divElement)
    }


  `
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var3)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
